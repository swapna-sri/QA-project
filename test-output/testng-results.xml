<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Myfirst_HybridFramework" duration-ms="70681" started-at="2019-02-24T05:05:07Z" finished-at="2019-02-24T05:06:18Z">
    <groups>
    </groups>
    <test name="BankingApp Test" duration-ms="70681" started-at="2019-02-24T05:05:07Z" finished-at="2019-02-24T05:06:18Z">
      <class name="Myfirst_HybridFramework.TestCase.Test_Case_001">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_001@31ef45e3]" name="setup" is-config="true" duration-ms="7131" started-at="2019-02-24T05:05:08Z" finished-at="2019-02-24T05:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="loginTest()[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_001@31ef45e3]" name="loginTest" duration-ms="4332" started-at="2019-02-24T05:05:15Z" finished-at="2019-02-24T05:05:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_001@31ef45e3]" name="tearDown" is-config="true" duration-ms="700" started-at="2019-02-24T05:05:19Z" finished-at="2019-02-24T05:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Myfirst_HybridFramework.TestCase.Test_Case_001 -->
      <class name="Myfirst_HybridFramework.TestCase.Test_Case_002">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_002@598067a5]" name="setup" is-config="true" duration-ms="4586" started-at="2019-02-24T05:05:20Z" finished-at="2019-02-24T05:05:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_002@598067a5]" name="loginDDT" duration-ms="7533" started-at="2019-02-24T05:05:26Z" data-provider="LoginData" finished-at="2019-02-24T05:05:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr180022]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EsEryra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="PASS" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_002@598067a5]" name="loginDDT" duration-ms="7652" started-at="2019-02-24T05:05:33Z" data-provider="LoginData" finished-at="2019-02-24T05:05:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr180336]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YnYdabY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="PASS" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_002@598067a5]" name="loginDDT" duration-ms="7505" started-at="2019-02-24T05:05:41Z" data-provider="LoginData" finished-at="2019-02-24T05:05:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr180335]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EnAnyqA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="FAIL" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_002@598067a5]" name="loginDDT" duration-ms="4537" started-at="2019-02-24T05:05:48Z" data-provider="LoginData" finished-at="2019-02-24T05:05:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr164225]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jahetAp]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at Myfirst_HybridFramework.TestCase.Test_Case_002.loginDDT(Test_Case_002.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="FAIL" signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_002@598067a5]" name="loginDDT" duration-ms="4257" started-at="2019-02-24T05:05:53Z" data-provider="LoginData" finished-at="2019-02-24T05:05:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr112909]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tytUreg]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at Myfirst_HybridFramework.TestCase.Test_Case_002.loginDDT(Test_Case_002.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_002@598067a5]" name="tearDown" is-config="true" duration-ms="729" started-at="2019-02-24T05:05:57Z" finished-at="2019-02-24T05:05:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Myfirst_HybridFramework.TestCase.Test_Case_002 -->
      <class name="Myfirst_HybridFramework.TestCase.Test_Case_003">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_003@3c0ecd4b]" name="setup" is-config="true" duration-ms="4415" started-at="2019-02-24T05:05:58Z" finished-at="2019-02-24T05:06:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="addNewCustomer()[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_003@3c0ecd4b]" name="addNewCustomer" duration-ms="15061" started-at="2019-02-24T05:06:02Z" finished-at="2019-02-24T05:06:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewCustomer -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Myfirst_HybridFramework.TestCase.Test_Case_003@3c0ecd4b]" name="tearDown" is-config="true" duration-ms="704" started-at="2019-02-24T05:06:17Z" finished-at="2019-02-24T05:06:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Myfirst_HybridFramework.TestCase.Test_Case_003 -->
    </test> <!-- BankingApp Test -->
  </suite> <!-- Myfirst_HybridFramework -->
</testng-results>
